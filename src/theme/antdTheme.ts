import { ThemeConfig } from "antd";

const antdTheme: ThemeConfig = {
  cssVar: true,
  hashed: false,
  // algorithm: theme.darkAlgorithm,
  token: {
    fontFamily: "var(--font-primary), var(--font-secondary)",
    colorBorder: "var(--color-neutral-300)",
    colorPrimary: "var(--color-primary)",
    colorText: "var(--color-neutral-700)",
    colorTextDescription: "var(--color-neutral-500)",
    colorLink: "var(--color-secondary-500)",
    colorLinkHover: "var(--color-secondary-700)",
    colorLinkActive: "var(--color-secondary-800)",
    colorError: "var(--color-danger-500)",
    colorErrorText: "var(--color-danger-500)",
    colorErrorBg: "var(--color-danger-50)",
    colorErrorOutline: "var(--color-danger-500)",
    colorErrorBorder: "var(--color-danger-500)",
    colorErrorHover: "var(--color-danger-600)",
    colorErrorBorderHover: "var(--color-danger-600)",
    colorErrorActive: "var(--color-danger-700)",
    colorErrorBgHover: "var(--color-danger-500)",
    colorWarning: "var(--color-warning-500)",
    colorWarningText: "var(--color-warning-500)",
    colorWarningBg: "var(--color-warning-50)",
    colorWarningOutline: "var(--color-warning-500)",
    colorWarningBorder: "var(--color-warning-500)",
    colorWarningHover: "var(--color-warning-600)",
    colorWarningBorderHover: "var(--color-warning-600)",
    colorWarningActive: "var(--color-warning-700)",
    colorSuccess: "var(--color-success-500)",
    colorSuccessText: "var(--color-success-500)",
    colorSuccessBg: "var(--color-success-50)",
    colorSuccessBgHover: "var(--color-success-600)",
    colorSuccessBorder: "var(--color-success-500)",
    colorSuccessHover: "var(--color-success-600)",
    colorSuccessBorderHover: "var(--color-success-600)",
    colorSuccessActive: "var(--color-success-700)",
    borderRadius: 8,
    controlHeight: 36,
    controlHeightLG: 44,
    controlInteractiveSize: 16,
    fontSizeHeading1: 36,
    fontSizeHeading2: 30,
    fontSizeHeading3: 24,
    fontSizeHeading4: 20,
    fontSizeHeading5: 16,
    fontSize: 14,
    fontSizeSM: 12,
    fontSizeLG: 16,
    fontSizeXL: 20,
    fontWeightStrong: 700,
  },
  components: {
    Button: {
      paddingInline: 30,
      paddingInlineLG: 30,
      paddingInlineSM: 30,
      colorBgContainerDisabled: "var(--color-secondary-300)",
      borderRadius: 9999,
      borderRadiusLG: 9999,
      borderRadiusSM: 9999,
      primaryShadow: "none",

      // TODO: Using secondary color as antd does not allow multiple colors for button at the moment.
      colorPrimary: "var(--color-secondary-500)",
      colorPrimaryHover: "var(--color-secondary-700)",
      colorPrimaryActive: "var(--color-secondary-800)",
      colorError: "var(--color-danger-500)",
      colorErrorHover: "var(--color-danger-600)",
      colorErrorActive: "var(--color-danger-700)",
      colorErrorBorderHover: "var(--color-danger-600)",
      colorErrorOutline: "var(--color-danger-500)",
      colorLink: "var(--color-secondary-500)",
      colorLinkHover: "var(--color-secondary-700)",
      colorLinkActive: "var(--color-secondary-800)",
    },
    Input: {
      colorError: "var(--color-danger-500)",
      colorErrorBorder: "var(--color-danger-500)",
      activeBorderColor: "var(--color-primary-400)",
      hoverBorderColor: "var(--color-primary-400)",
      boxShadow: "0px 1px 2px 0px rgba(16, 24, 40, 0.05)",
      activeShadow: "0px 0px 0px 3px rgba(120, 138, 173, 0.27)",
    },
    InputNumber: {
      colorError: "var(--color-danger-500)",
      colorErrorBorder: "var(--color-danger-500)",
      activeBorderColor: "var(--color-primary-400)",
      hoverBorderColor: "var(--color-primary-400)",
      boxShadow: "0px 1px 2px 0px rgba(16, 24, 40, 0.05)",
      activeShadow: "0px 0px 0px 3px rgba(120, 138, 173, 0.27)",
    },
    Checkbox: {
      colorPrimary: "var(--color-secondary-500)",
      colorPrimaryHover: "var(--color-secondary-500)",
      controlInteractiveSize: 24,
      borderRadiusSM: 6,
    },
    Form: {
      labelFontSize: 14,
      fontSize: 11,
      verticalLabelPadding: "0 0 4px",
      lineHeight: 1.5,
      colorError: "var(--color-danger-500)",
      labelRequiredMarkColor: "var(--color-danger-500)",
    },
    Typography: {
      colorSuccess: "var(--color-success-500)",
      colorError: "var(--color-danger-500)",
      colorWarning: "var(--color-warning-500)",
      colorTextDescription: "var(--color-neutral-500)",
    },
    Menu: {
      // darkItemColor: "#fff",
      // darkItemBg: "var(--color-primary-700)",
      // darkItemHoverBg: "var(--color-primary-500)",
      // darkItemSelectedBg: "var(--color-primary-500)",
      // colorSplit: "rgba(255, 255, 255, 0.20)",
    },
    Select: {
      colorPrimary: "var(--color-primary-300)",
      colorPrimaryHover: "var(--color-primary-300)",
      controlOutline: "rgba(120, 138, 173, 0.27)",
      controlOutlineWidth: 3,
      colorBgContainerDisabled: "var(--color-neutral-50)",
      multipleItemBg: "var(--color-primary-50)",
      optionActiveBg: "var(--color-neutral-100)",
      optionSelectedBg: "var(--color-neutral-100)",
      optionSelectedColor: "var(--color-neutral-700)",
      optionSelectedFontWeight: 500,
    },
    Pagination: {
      itemActiveBg: "var(--color-neutral-200)",
      colorBgTextHover: "var(--color-neutral-200)",
      colorPrimary: "var(--color-neutral-700)",
      borderRadius: 9999,
      lineWidth: 0,
    },
    Table: {
      headerBg: "var(--color-neutral-200)",
      headerColor: "var(--color-neutral-500)",
      colorText: "var(--color-neutral-500)",
      fontWeightStrong: 500,
      borderColor: "var(--color-neutral-200)",
      headerBorderRadius: 0,
      headerSplitColor: "var(--color-neutral-200)",
    },
    Modal: {
      titleFontSize: 24,
      titleColor: "var(--color-neutral-500)",
    },
    Tabs: {
      itemColor: "var(--color-neutral-500)",
      itemSelectedColor: "var(--color-secondary-400)",
      itemActiveColor: "var(--color-secondary-400)",
      inkBarColor: "var(--color-secondary-400)",
      lineWidthFocus: 1,
      itemHoverColor: "var(--color-secondary-400)",
      horizontalItemPadding: "8px 12px",
    },
    DatePicker: {
      activeBorderColor: "var(--color-primary-400)",
      colorBorder: "var(--color-neutral-200)",
      colorPrimary: "var(--color-secondary-400)", //
      cellActiveWithRangeBg: "var(--color-secondary-200)",
      cellHoverWithRangeBg: "var(--color-secondary-100)",
      activeShadow: "0px 0px 0px 3px rgba(120, 138, 173, 0.27)",
      hoverBorderColor: "var(--color-primary-400)",
    },
    Tag: {
      borderRadiusSM: 100,
      borderRadiusLG: 100,
      colorWarning: "var(--color-warning-500)",
      colorWarningBg: "var(--color-warning-50)",
      colorSuccessBg: "var(--color-success-50)",
      colorSuccess: "var(--color-success-500)",
      colorError: "var(--color-danger-500)",
      colorErrorBg: "var(--color-danger-50)",
      colorInfo: "var(--color-primary-500)",
      colorInfoBg: "var(--color-primary-50)",
      defaultColor: "var(--color-neutral-500)",
      defaultBg: "var(--color-neutral-100)",
    },
    Steps: {
      iconSize: 40,
      marginXXS: 0,
      colorSplit: "var(--color-neutral-300)",
      colorPrimary: "var(--color-secondary-500)",
      fontSizeLG: 14,
      fontSizeSM: 12,
    },
    Timeline: {
      lineType: "dotted",
      dotBg: "var(--color-neutral-100)",
    },
    Upload: {
      colorFillAlter: "#fff",
    },
    Radio: {
      colorPrimary: "var(--color-secondary-500)",
      colorBorder: "var(--color-secondary-500)",
    },
    Spin: {
      colorPrimary: "var(--color-secondary-500)",
    },
    Alert: {
      colorWarning: "var(--color-warning-700)",
      colorInfoBg: "var(--color-neutral-100)",
      colorInfo: "var(--color-primary-700)",
      lineWidth: 0,
    },
    Segmented: {
      itemSelectedBg: "var(--color-secondary-500)",
      itemSelectedColor: "#fff",
      itemHoverBg: "#fff",
      itemActiveBg: "#fff",
      trackBg: "#fff",
      trackPadding: 4,
      controlPaddingHorizontal: 36,
      controlHeightLG: 62,
      borderRadiusOuter: 9999,
      borderRadius: 9999,
      borderRadiusLG: 9999,
    },
    Slider: {
      controlSize: 12,
      handleSize: 24,
      handleSizeHover: 24,
      railSize: 12,
      railBg: "var(--color-neutral-100)",
      trackBg: "var(--color-secondary-600)",
      trackHoverBg: "var(--color-secondary-600)",
      dotBorderColor: "var(--color-secondary-400)",
      dotActiveBorderColor: "var(--color-secondary-400)",
      handleColor: "var(--color-secondary-400)",
      handleActiveColor: "var(--color-secondary-400)",
      borderRadiusXS: 9999,
    },
    Layout: {
      headerHeight: 64,
    },
  },
};

export default antdTheme;
